---
- name: Create and Manage Proxmox VM
  hosts: build
  collections:
    - community.general
  vars:
    proxmox_api_host: 10.0.0.200
    proxmox_api_port: 8006
    proxmox_node: proxmox
    validate_certs: no
    vm_name: "test-vm-01"
    template_id: 9000  # Verify your template VMID
    storage_pool: local
    
  tasks:
    - name: Validate Proxmox API connection
      ansible.builtin.uri:
        url: "https://{{ proxmox_api_host }}:{{ proxmox_api_port }}/api2/json"
        user: "{{ proxmox_api_user }}"
        password: "{{ proxmox_api_password }}"
        validate_certs: "{{ validate_certs }}"
        status_code: 200
      register: api_check
      ignore_errors: yes
      changed_when: false

    - name: Fail if API unreachable
      ansible.builtin.fail:
        msg: "Could not connect to Proxmox API at {{ proxmox_api_host }}:{{ proxmox_api_port }}"
      when: api_check is failed

    - name: Clone VM template
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_api_host }}"
        api_port: "{{ proxmox_api_port }}"
        api_user: "{{ proxmox_api_user }}"
        api_password: "{{ proxmox_api_password }}"
        validate_certs: "{{ validate_certs }}"
        node: "{{ proxmox_node }}"
        clone: "{{ template_id }}"
        name: "{{ vm_name }}"
        storage: "{{ storage_pool }}"
        full: yes
      register: vm_creation
      retries: 3
      delay: 10
      until: vm_creation is succeeded

    - name: Show cloning results
      ansible.builtin.debug:
        var: vm_creation

    - name: Wait for VM provisioning
      ansible.builtin.pause:
        seconds: 15
      when: vm_creation.changed

    - name: Verify VM status
      community.general.proxmox_kvm:
        api_host: "{{ proxmox_api_host }}"
        api_user: "{{ proxmox_api_user }}"
        api_password: "{{ proxmox_api_password }}"
        node: "{{ proxmox_node }}"
        name: "{{ vm_name }}"
      register: vm_status

    - name: Display final VM status
      ansible.builtin.debug:
        var: vm_status
